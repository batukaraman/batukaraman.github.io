@use "./variables.scss" as *;

.modal {
  padding: 1rem;
  position: fixed;
  z-index: 4;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  opacity: 0;
  pointer-events: none;
  transition: 0.3s ease-in-out;
  display: flex;
  align-items: center;
  justify-content: center;

  &.show {
    opacity: 1;
    pointer-events: auto;

    & .modal__content {
      transform: translateY(0);
    }
  }

  &__content {
    width: 100%;
    max-width: 900px;
    max-height: 600px;
    height: 100%;
    position: relative;
    background-color: $color-white;
    border-radius: 10px;
    z-index: 5;
    transform: translateY(-5%);
    transition: 0.3s ease-in-out;
    padding: 1rem;
  }

  &__close {
    position: absolute;
    top: 1rem;
    right: 1rem;
  }

  &__overlay {
    position: absolute;

    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    height: 100%;
    background-color: rgba($color: $blue-70, $alpha: 0.2);
  }
}

.request-modal {
  height: 100%;
  display: flex;
  flex-direction: column;

  &__subtitle {
    font-weight: 500;
  }

  &__header {
    padding: 0.5rem;
  }

  &__form {
    padding: 0.5rem;
    height: 100%;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: min-content 1fr min-content;
    gap: 1rem;
    overflow-y: auto;

    & #files {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    @media screen and (max-width: 600px) {
      grid-template-columns: 1fr;
      grid-template-rows: min-content min-content min-content 1fr min-content;
    }

    & .request-modal__actions {
      grid-column-start: 2;
      grid-row-start: 3;

      @media screen and (max-width: 600px) {
        grid-column-start: auto;
        grid-row-start: auto;
      }
    }

    & textarea {
      max-height: calc(300px + 48px);
      min-height: 100px;
      height: 100%;
    }

    & input {
      width: 100%;
    }

    & textarea,
    & input {
      width: 100%;
      border: 1px solid rgba($blue-70, 0.15);
      outline: none;
      appearance: none;
      background-color: rgb(255, 255, 255);
      border-radius: 5px;
      color: rgba($color: $blue-70, $alpha: 1);
      display: flex;
      font-family: Inter, system-ui, sans-serif;
      font-size: 14px;
      justify-content: center;
      line-height: 18px;
      padding: 10px 12px;
      transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out,
        border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
      resize: vertical;

      font-weight: 400;
      text-size-adjust: 100%;

      &:focus {
        box-shadow: rgba($color: $blue-0, $alpha: 0.7) 0px 0px 0px 1px;
        border: 1px solid rgba($color: $blue-0, $alpha: 0.7);
      }
    }

    & input[type="file"] {
      padding: 0;
      cursor: pointer;
      color: rgba($blue-70, 0.7);

      &:hover ~ input[type="file"]::file-selector-button {
        background-color: red;
      }
    }
  }

  &__file-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    list-style: none;
    max-height: calc(300px + 8px);
    overflow-y: auto;

    &__item {
      display: flex;
      align-items: center;
      justify-content: space-between;

      & > div {
        display: flex;
        gap: 0.5rem;

        & div {
          display: flex;
          flex-direction: column;
        }

        & span {
          max-width: 200px;
          font-weight: 500;
          display: block;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }

        & small {
          color: rgba($color: $blue-70, $alpha: 0.7);
        }
      }
    }
  }

  &__actions {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    justify-content: end;
  }
}

:has(.modal.show) body {
  overflow: hidden;
}
